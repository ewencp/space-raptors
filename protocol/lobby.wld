Lobby

Endpoint Client;
Endpoint Lobby;

Sequences {
    BeginSession: Client.start_session -> Lobby.add_user;
    ChangeUsername: Client.set_username -> Lobby.handle_change_username;
}

Shared {
    Nothing controls Text username;
}

// Starts a session with the server and invokes a callback upon completion
Sequence BeginSession(Text name, Function (returns: Nothing) on_began_session) {
    Client.start_session {
        username = name;
    }
    Lobby.add_user {
        // If the username is already provided, add some random
        // numbers until we get one that isn't. The client will then
        // pick this up when the session initiation complete. They can
        // try changing their name again later if they like.
        // NOTE: Can't currently use rand() because we don't have access
        // to it, just add fixed to the end
        Text digits = '1234567890';
        Number n = 0;
        while (username in users) {
            n += 1;
            if (n > len(digits)) n = 0;
            username += 'a'; // FIXME Text[] broken
        }
        users.append(username);
    }
    Client.onComplete {
        on_began_session();
    }
}

// Request that your username be changed, e.g. if your original
// username was taken already
Sequence ChangeUsername(Text name, Function (in: TrueFalse; returns: Nothing) on_change_username_response) {
    TrueFalse changed = False;

    Client.set_username {
    }
    Lobby.handle_change_username {
        if (not name in users) {
            changed = True;
            removeUser(username);
            username = name;
            users.append(username);
        }
    }
    Client.onComplete {
        on_change_username_response(changed);
    }
}

Client {
    Public Function get_username() returns Text {
        return username;
    }


    Public Function begin_session(Text name, Function (returns: Nothing) on_began_session) {
        start_session(name, on_began_session);
    }

    Public Function change_username(Text name, Function (in: TrueFalse; returns: Nothing) on_change_username_response) {
        set_username(name, on_change_username_response);
    }
}

Lobby {
    External List(element: Text) users;

    onCreate(External List(element: Text) users_) {
        extAssign users_ to users;
    }


    Private Function removeUser(Text name) returns Nothing {
        Number idx = 0;
        for(Text user in users) {
            if (user == name)
                users.remove(idx);
            idx += 1;
        }
    }

}
